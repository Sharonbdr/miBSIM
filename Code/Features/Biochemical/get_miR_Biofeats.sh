#!/bin/bash

# ===============================================================
# Running CNN to predict kd and occ values
# ===============================================================

# Local Paths
# ===============================================================

# miRNA_models Model
mirna_models_path="${ROOT_path}Biochemical/NN/" 

# Code path and files
explore_path="${ROOT_path}Biochemical" 
report_path="${explore_path}/reports" 
input_path="${report_path}/inputs/${dataset}" 
output_path="${report_path}/outputs" 
SA_path="${report_path}/outputs/SA_background" 
bg_vals_path="${SA_path}/bg_vals" 
mirseq_file="${input_path}/mirseqs_rel.txt"
sequences_path="${SA_path}/sequences"
bg_vals_processed_path="${SA_path}/bg_vals_processed" 
partial_mir_list="${input_path}/miRs_rel.txt"
output_file="${output_path}/kds/MIR_kds.txt" # note that MIR will be replaced with the miRNA name by the code 
cnn_model="${mirna_models_path}cnn/trained_model/model-100" 

# Input parameters
# =============================================================

mirlen=10 
nbins=10
num_bg=200
num_processes=1

# =============================================================
# Generates 12-nt kmers for each miRNA
# =============================================================

echo "Running the CNN model..."

cd $mirna_models_path

python cnn/generate_12mer_kds.py \
--name all \
--load_model $cnn_model \
--mirdata $mirseq_file \
--mirlen $mirlen \
--outfile $output_file

echo "Done."


# =============================================================
# Partition all 12-nt kmers into 10 files
# =============================================================

echo "Partition 12-nt kmers into 10 files..."

cd $mirna_models_path

python rnaplfold/partition_seqs.py \
--mirseqs $mirseq_file \
--nbins $nbins \
--outdir $sequences_path \
--only_canon \


echo "Now creating 200 random contexts for each sequence in each file and folding them..."

for mirname in $(cat $partial_mir_list) ; do \
for ix in 0 1 2 3 4 5 6 7 8 9 ; do \ 
echo "processing $mirname:$ix..." \
python rnaplfold/get_SA_bg.py \
--sequence_file $sequences_path/canon_"$mirname"_"$ix".txt \
--temp_folder /scratch/sharon/canon_"$mirname"_"$ix"_TEMP \
--num_bg $num_bg \
--num_processes $num_processes \
--outfile $bg_vals_path/canon_"$mirname"_"$ix"_bg_vals.txt; \
done; \
done


echo "Done ."


# =============================================================
# Parse folding of background sequences
# =============================================================
# The following analyzes the results from the code above.
# Once the results generated by the code above are ready, run the following rnaplfold/combine_results.py.

echo "Parse RNAplfold outputs from above for all background sequences..."


python rnaplfold/combine_results.py \
--mirseqs $mirseq_file \
--nbins $nbins \
--num_bg $n_bg \
--infile_seqs $sequences_path/canon_MIR_IX.txt \
--infile_bg $bg_vals_path/canon_MIR_IX_bg_vals.txt \
--outfile $bg_vals_processed_path/canon_MIR_bg_vals.txt \



echo "Done."


cd $explore_path
